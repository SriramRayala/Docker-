sudo apt update
sudo apt install docker.io docker-compose -y
sudo docker run --name web -itd -p 8080:80 nginx


another terminal
mkdir docker
cd docker
nano docker-compose.yaml
( 
version: "3"
services:
  website:
    image: nginx
    ports:
      - "8081:80"
    restart: always
) - save the file
sudo docker-compose up -d
( creates a network and a default bridge network)
sudo docker ps
sudo docker-compose ps
in Browser - localhost:8081
sudo docker-compose down
sudo docker-compose up -d
sudo docker-compose stop
sudo docker-compose down
                          
                             2 containers

Second file
Docker-compose.yaml
(
version: "3"
services:
  website:
    image: nginx
    ports:
      - "8081:80"
    restart: always
  website2:
    image: nginx
    ports:
      - "8082:80"
    restart: always
)
sudo docker-compose up -d

                      2 containers and a network

sudo docker network create docker --subnet 192.168.92.0/24

nano DOcker-compose.yaml
(
version: "3"
services:
  website:
    image: nginx
    ports:
      - "8081:80"
    restart: always
  website2:
    image: nginx
    ports:
      - "8082:80"
    restart: always
    networks:
      docker:
        ipv4_address: 192.168.92.21
networks: 
  docker:
    ipam:
      driver: default
      config:
        - subnet: "192.168.92.0/24"
)
sudo docker-compose up -d
sudo docker-compose ps
sudo docker network ls
sudo docker inspect ( )

                       wordpress site

mkdir wordpress
cd wordpress
nano docker-compose.yaml
(
version: "3"
services:
  wordpress:
    image: wordpress
    ports:
      - "8089:80"
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "cofee"
      WORDPRESS_DB_NAME: wordpress
  mysql:
    image: "mysql:5.7"
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: "docker"
    volumes:
      - ./msql:/var/lib/mysql
networks:
  ohyeah:
    ipam:
      driver: default
) save it
sudo docker-compose up -d
sudo docker-compose ps
in browser - localhost:8089
ls
cd mysql/
ls
cd ..
sudo docker-compose down
sudo docker-compose up

cd ..
make hackinglab
from https://github.com/vulhub/vulhub





